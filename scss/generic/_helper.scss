/*------------------------------------*\
    $HELPER
\*------------------------------------*/
/**
 * A series of helper classes to use arbitrarily. Only use a helper class if an
 * element/component doesnâ€™t already have a class to which you could apply this
 * styling, e.g. if you need to float `.main-nav` left then add `float:left;` to
 * that ruleset as opposed to adding the `.float--left` class to the markup.
 *
 * A lot of these classes carry `!important` as you will always want them to win
 * out over other selectors.
 */

/**
 * Display
 */
.display--block         { display: block!important; }
.display--inline-block  { display: inline-block!important; }
.display--inline        { display: inline!important; }


/**
 * Add/remove floats
 */
.float--right   { float:right!important; }
.float--left    { float:left !important; }
.float--none    { float:none !important; }


.relative { position: relative; }


/**
 * Text alignment
 */
.text--left     { text-align:left  !important; }
.text--center   { text-align:center!important; }
.text--right    { text-align:right !important; }


/**
 * Vertical alignment
 */
.vert--top      { vertical-align:top     !important; }
.vert--middle   { vertical-align:middle  !important; }
.vert--baseline { vertical-align:baseline!important; }
.vert--bottom   { vertical-align:bottom  !important; }


/**
 * Font weights
 */
.weight--light      { font-weight:300!important; }
.weight--normal     { font-weight:400!important; }
.weight--semibold   { font-weight:600!important; }
.weight--bold       { font-weight:700!important; }


.nowrap { white-space: nowrap; }


.line-height--alpha   { line-height: 48px;}
.line-height--beta    { line-height: 36px;}
.line-height--gamma   { line-height: 24px;}
.line-height--delta   { line-height: 12px;}
.line-height--epsilon { line-height: 1;}
.line-height--zeta    { line-height: 0;}


/**
 * Add/remove margins
 */
.repel           { margin:       $base-spacing-unit!important; }
.repel--top      { margin-top:   $base-spacing-unit!important; }
.repel--right    { margin-right: $base-spacing-unit!important; }
.repel--bottom   { margin-bottom:$base-spacing-unit!important; }
.repel--left     { margin-left:  $base-spacing-unit!important; }
.repel--ends     { margin-top:   $base-spacing-unit!important; margin-bottom:$base-spacing-unit!important; }
.repel--sides    { margin-right: $base-spacing-unit!important; margin-left:  $base-spacing-unit!important; }

.repel-half          { margin:       $half-spacing-unit!important; }
.repel-half--top     { margin-top:   $half-spacing-unit!important; }
.repel-half--right   { margin-right: $half-spacing-unit!important; }
.repel-half--bottom  { margin-bottom:$half-spacing-unit!important; }
.repel-half--left    { margin-left:  $half-spacing-unit!important; }
.repel-half--ends    { margin-top:   $half-spacing-unit!important; margin-bottom:$half-spacing-unit!important; }
.repel-half--sides   { margin-right: $half-spacing-unit!important; margin-left:  $half-spacing-unit!important; }

.repel-quarter          { margin:       $half-spacing-unit/2!important; }
.repel-quarter--top     { margin-top:   $half-spacing-unit/2!important; }
.repel-quarter--right   { margin-right: $half-spacing-unit/2!important; }
.repel-quarter--bottom  { margin-bottom:$half-spacing-unit/2!important; }
.repel-quarter--left    { margin-left:  $half-spacing-unit/2!important; }
.repel-quarter--ends    { margin-top:   $half-spacing-unit/2!important; margin-bottom:$half-spacing-unit/2!important; }
.repel-quarter--sides   { margin-right: $half-spacing-unit/2!important; margin-left:  $half-spacing-unit/2!important; }

.repel--auto      { margin-right: auto!important; margin-left: auto!important; }

.flush          { margin:       0!important; }
.flush--top     { margin-top:   0!important; }
.flush--right   { margin-right: 0!important; }
.flush--bottom  { margin-bottom:0!important; }
.flush--left    { margin-left:  0!important; }
.flush--ends    { margin-top:   0!important; margin-bottom:0!important; }
.flush--sides   { margin-right: 0!important; margin-left:  0!important; }


/**
 * Add/remove paddings
 */
.soft           { padding:       $base-spacing-unit!important; }
.soft--top      { padding-top:   $base-spacing-unit!important; }
.soft--right    { padding-right: $base-spacing-unit!important; }
.soft--bottom   { padding-bottom:$base-spacing-unit!important; }
.soft--left     { padding-left:  $base-spacing-unit!important; }
.soft--ends     { padding-top:   $base-spacing-unit!important; padding-bottom:$base-spacing-unit!important; }
.soft--sides    { padding-right: $base-spacing-unit!important; padding-left:  $base-spacing-unit!important; }

.soft-half           { padding:       $half-spacing-unit!important; }
.soft-half--top      { padding-top:   $half-spacing-unit!important; }
.soft-half--right    { padding-right: $half-spacing-unit!important; }
.soft-half--bottom   { padding-bottom:$half-spacing-unit!important; }
.soft-half--left     { padding-left:  $half-spacing-unit!important; }
.soft-half--ends     { padding-top:   $half-spacing-unit!important; padding-bottom:$half-spacing-unit!important; }
.soft-half--sides    { padding-right: $half-spacing-unit!important; padding-left:  $half-spacing-unit!important; }

.soft-quarter           { padding:       $half-spacing-unit/2!important; }
.soft-quarter--top      { padding-top:   $half-spacing-unit/2!important; }
.soft-quarter--right    { padding-right: $half-spacing-unit/2!important; }
.soft-quarter--bottom   { padding-bottom:$half-spacing-unit/2!important; }
.soft-quarter--left     { padding-left:  $half-spacing-unit/2!important; }
.soft-quarter--ends     { padding-top:   $half-spacing-unit/2!important; padding-bottom:$half-spacing-unit/2!important; }
.soft-quarter--sides    { padding-right: $half-spacing-unit/2!important; padding-left:  $half-spacing-unit/2!important; }

.hard           { padding:       0!important; }
.hard--top      { padding-top:   0!important; }
.hard--right    { padding-right: 0!important; }
.hard--bottom   { padding-bottom:0!important; }
.hard--left     { padding-left:  0!important; }
.hard--ends     { padding-top:   0!important; padding-bottom:0!important; }
.hard--sides    { padding-right: 0!important; padding-left:  0!important; }


/**
 * Pull items full width of `.island` parents.
 */
.full-bleed{
    margin-right: -$base-spacing-unit!important;
    margin-left: -$base-spacing-unit!important;

    .islet & {
        margin-right: -($half-spacing-unit)!important;
        margin-left: -($half-spacing-unit)!important;
    }
}


/**
 * Add a help cursor to any element that gives the user extra information on
 * `:hover`.
 */
.informative {
    cursor: help!important;
}


/**
 * Mute an object by reducing its opacity.
 */
.muted {
    opacity: 0.5!important;
    filter: alpha(opacity = 50)!important;
}


/**
 * Align items to the right where they imply progression/movement forward, e.g.:
 *
   <p class=proceed><a href=#>Read more...</a></p>
 *
 */
.proceed {
    text-align: right!important;
}


/**
 * Add a right-angled quote to links that imply movement, e.g.:
 *
   <a href=# class=go>Read more</a>
 *
 */
.go:after {
    content: "\00A0" "\00BB"!important;
}


/**
 * Apply capital case to an element (usually a `strong`).
 */
.uppercase {
    text-transform: uppercase!important;
}


/**
 * Hide content off-screen without resorting to `display:none;`, also provide
 * breakpoint specific hidden elements.
 */
@mixin accessibility {
    border: 0!important;
    clip: rect(0 0 0 0)!important;
    height: 1px!important;
    margin: -1px!important;
    overflow: hidden!important;
    padding: 0!important;
    position: absolute!important;
    width: 1px!important;
}
.accessibility,
.visuallyhidden {
    @include accessibility;
}
@if $responsive {
    @each $state in palm-and-down, palm, lap, lap-and-up, portable, desk, desk-wide {
        @include media-query(#{$state}) {
            .accessibility--#{$state},
            .visuallyhidden--#{$state} {
                @include accessibility;
            }
        }
    }
}


.hidden {
    display: none !important;
    visibility: hidden !important;
}
